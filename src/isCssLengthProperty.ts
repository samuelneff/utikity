
/**
 * All defined CSS properties that use a length unit, in camel and kebab case.
 */
export type CssLengthProperty = keyof typeof cssLengthPropertiesLookup;

/**
 * @hidden
 */
const cssLengthPropertiesLookup = {
  borderBlockEndWidth: true,
  borderBlockStartWidth: true,
  borderBlockWidth: true,
  borderBottomLeftRadius: true,
  borderBottomRightRadius: true,
  borderBottomWidth: true,
  borderEndEndRadius: true,
  borderEndStartRadius: true,
  borderImageOutset: true,
  borderImageWidth: true,
  borderInlineEndWidth: true,
  borderInlineStartWidth: true,
  borderInlineWidth: true,
  borderLeft: true,
  borderLeftWidth: true,
  borderRadius: true,
  borderRight: true,
  borderRightWidth: true,
  borderStartEndRadius: true,
  borderStartStartRadius: true,
  borderTop: true,
  borderTopLeftRadius: true,
  borderTopRightRadius: true,
  borderTopWidth: true,
  borderWidth: true,
  bottom: true,
  columnGap: true,
  columnRuleWidth: true,
  columnWidth: true,
  containIntrinsicBlockSize: true,
  containIntrinsicHeight: true,
  containIntrinsicInlineSize: true,
  containIntrinsicSize: true,
  containIntrinsicWidth: true,
  fontSize: true,
  fontSizeAdjust: true,
  gap: true,
  gridColumnGap: true,
  gridGap: true,
  gridRowGap: true,
  height: true,
  inlineSize: true,
  insetBlock: true,
  insetBlockEnd: true,
  insetBlockStart: true,
  insetInline: true,
  insetInlineEnd: true,
  insetInlineStart: true,
  left: true,
  lineHeight: true,
  margin: true,
  marginBlock: true,
  marginBlockEnd: true,
  marginBlockStart: true,
  marginBottom: true,
  marginInline: true,
  marginInlineEnd: true,
  marginInlineStart: true,
  marginLeft: true,
  marginRight: true,
  marginTop: true,
  maskSize: true,
  maxBlockSize: true,
  maxHeight: true,
  maxInlineSize: true,
  maxWidth: true,
  minBlockSize: true,
  minHeight: true,
  minInlineSize: true,
  minWidth: true,
  offset: true,
  offsetDistance: true,
  outlineOffset: true,
  outlineWidth: true,
  overflowClipMargin: true,
  overflowX: true,
  overflowY: true,
  padding: true,
  paddingBlock: true,
  paddingBlockEnd: true,
  paddingBlockStart: true,
  paddingBottom: true,
  paddingInline: true,
  paddingInlineEnd: true,
  paddingInlineStart: true,
  paddingLeft: true,
  paddingRight: true,
  paddingTop: true,
  resize: true,
  right: true,
  rowGap: true,
  scrollMargin: true,
  scrollMarginBlock: true,
  scrollMarginBlockEnd: true,
  scrollMarginBlockStart: true,
  scrollMarginBottom: true,
  scrollMarginInline: true,
  scrollMarginInlineEnd: true,
  scrollMarginInlineStart: true,
  scrollMarginLeft: true,
  scrollMarginRight: true,
  scrollMarginTop: true,
  scrollPadding: true,
  scrollPaddingBlock: true,
  scrollPaddingBlockEnd: true,
  scrollPaddingBlockStart: true,
  scrollPaddingBottom: true,
  scrollPaddingInline: true,
  scrollPaddingInlineEnd: true,
  scrollPaddingInlineStart: true,
  scrollPaddingLeft: true,
  scrollPaddingRight: true,
  scrollPaddingTop: true,
  scrollSnapStop: true,
  shapeMargin: true,
  strokeWidth: true,
  tabSize: true,
  textCombineUpright: true,
  textIndent: true,
  textUnderlineOffset: true,
  top: true,
  webkitBackgroundSize: true,
  webkitBorderBottomLeftRadius: true,
  webkitBorderBottomRightRadius: true,
  webkitBorderRadius: true,
  webkitBorderTopLeftRadius: true,
  webkitBorderTopRightRadius: true,
  webkitMaskBoxImageWidth: true,
  webkitMaskSize: true,
  webkitTextSizeAdjust: true,
  webkitTextStrokeWidth: true,
  width: true,
  wordSpacing: true,

  'border-block-end-width': true,
  'border-block-start-width': true,
  'border-block-width': true,
  'border-bottom-left-radius': true,
  'border-bottom-right-radius': true,
  'border-bottom-width': true,
  'border-end-end-radius': true,
  'border-end-start-radius': true,
  'border-image-outset': true,
  'border-image-width': true,
  'border-inline-end-width': true,
  'border-inline-start-width': true,
  'border-inline-width': true,
  'border-left': true,
  'border-left-width': true,
  'border-radius': true,
  'border-right': true,
  'border-right-width': true,
  'border-start-end-radius': true,
  'border-start-start-radius': true,
  'border-top': true,
  'border-top-left-radius': true,
  'border-top-right-radius': true,
  'border-top-width': true,
  'border-width': true,
  'column-gap': true,
  'column-rule-width': true,
  'column-width': true,
  'contain-intrinsic-block-size': true,
  'contain-intrinsic-height': true,
  'contain-intrinsic-inline-size': true,
  'contain-intrinsic-size': true,
  'contain-intrinsic-width': true,
  'font-size': true,
  'font-size-adjust': true,
  'grid-column-gap': true,
  'grid-gap': true,
  'grid-row-gap': true,
  'inline-size': true,
  'inset-block': true,
  'inset-block-end': true,
  'inset-block-start': true,
  'inset-inline': true,
  'inset-inline-end': true,
  'inset-inline-start': true,
  'line-height': true,
  'margin-block': true,
  'margin-block-end': true,
  'margin-block-start': true,
  'margin-bottom': true,
  'margin-inline': true,
  'margin-inline-end': true,
  'margin-inline-start': true,
  'margin-left': true,
  'margin-right': true,
  'margin-top': true,
  'mask-size': true,
  'max-block-size': true,
  'max-height': true,
  'max-inline-size': true,
  'max-width': true,
  'min-block-size': true,
  'min-height': true,
  'min-inline-size': true,
  'min-width': true,
  'offset-distance': true,
  'outline-offset': true,
  'outline-width': true,
  'overflow-clip-margin': true,
  'overflow-x': true,
  'overflow-y': true,
  'padding-block': true,
  'padding-block-end': true,
  'padding-block-start': true,
  'padding-bottom': true,
  'padding-inline': true,
  'padding-inline-end': true,
  'padding-inline-start': true,
  'padding-left': true,
  'padding-right': true,
  'padding-top': true,
  'row-gap': true,
  'scroll-margin': true,
  'scroll-margin-block': true,
  'scroll-margin-block-end': true,
  'scroll-margin-block-start': true,
  'scroll-margin-bottom': true,
  'scroll-margin-inline': true,
  'scroll-margin-inline-end': true,
  'scroll-margin-inline-start': true,
  'scroll-margin-left': true,
  'scroll-margin-right': true,
  'scroll-margin-top': true,
  'scroll-padding': true,
  'scroll-padding-block': true,
  'scroll-padding-block-end': true,
  'scroll-padding-block-start': true,
  'scroll-padding-bottom': true,
  'scroll-padding-inline': true,
  'scroll-padding-inline-end': true,
  'scroll-padding-inline-start': true,
  'scroll-padding-left': true,
  'scroll-padding-right': true,
  'scroll-padding-top': true,
  'scroll-snap-stop': true,
  'shape-margin': true,
  'stroke-width': true,
  'tab-size': true,
  'text-combine-upright': true,
  'text-indent': true,
  'text-underline-offset': true,
  'webkit-background-size': true,
  'webkit-border-bottom-left-radius': true,
  'webkit-border-bottom-right-radius': true,
  'webkit-border-radius': true,
  'webkit-border-top-left-radius': true,
  'webkit-border-top-right-radius': true,
  'webkit-mask-box-image-width': true,
  'webkit-mask-size': true,
  'webkit-text-size-adjust': true,
  'webkit-text-stroke-width': true,
  'word-spacing': true,
};

/**
 * Array of all css properties that use a length value such as `width`, `height`, `wordSpacing`, etc. Includes
 * property names both in camel-case, as used in JavaScript, and kebab-case, as used within CSS.
 *
 * @see {@link isCssLengthProperty}
 */
export const cssLengthProperties = Object.keys(cssLengthPropertiesLookup).sort() as CssLengthProperty[];

/**
 * Determines if a CSS property is a lenth property--takes a length unit. Such as `width`, `height`, or `wordSpacing`.
 * Returns true for properties both in camel-case, as used in JavaScript, and kebab-case, as used within CSS.
 *
 * @example
 *
 * expect(isCssLengthProperty('width')).toBeTruthy();
 * expect(isCssLengthProperty('wordSpacing')).toBeTruthy();
 * expect(isCssLengthProperty('word-spacing')).toBeTruthy();
 *
 * expect(isCssLengthProperty('color')).toBeFalsy();
 *
 * @see {@link cssLengthProperties}
 */
export function isCssLengthProperty(property: string): property is CssLengthProperty {
  return Boolean(cssLengthPropertiesLookup[ property as CssLengthProperty ]);
}
